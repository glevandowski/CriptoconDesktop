
package views;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import model.Authentication;
import service.AuthenticationService;
import util.IsFocusDialog;
import views.listeners.RemovedPasswListener;


public class GUIManagement extends javax.swing.JInternalFrame {
    private static int FLAG_CONTROLL_FOCUS=0;
    private ArrayList<Authentication> authArray = new ArrayList<>();
    private AuthenticationService authService = service.ServiceFactory.getAuthenticationService();
    private RemovedPasswListener removedPasswListener;
    private IsFocusDialog isFocusDialog = new IsFocusDialog();
    
    public GUIManagement(RemovedPasswListener removedPasswListener) {
        initComponents();
        this.removedPasswListener=removedPasswListener;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jpNewPassw1 = new javax.swing.JPasswordField();
        jpNewPassw2 = new javax.swing.JPasswordField();
        jlAlertPassw = new javax.swing.JLabel();
        jlAlertPassw2 = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jbUpdate = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jbCheckPasswd = new javax.swing.JButton();

        setClosable(true);

        jLabel1.setText("Alteração de senha");

        jLabel2.setText("Digite a nova senha:");

        jLabel3.setText("Confirme a nova senha:");

        jpNewPassw1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jpNewPassw1FocusLost(evt);
            }
        });
        jpNewPassw1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jpNewPassw1KeyPressed(evt);
            }
        });

        jpNewPassw2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jpNewPassw2FocusLost(evt);
            }
        });
        jpNewPassw2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jpNewPassw2KeyPressed(evt);
            }
        });

        jLayeredPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jpNewPassw1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jpNewPassw2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jlAlertPassw, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jlAlertPassw2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap(250, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(216, 216, 216))
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(68, 68, 68)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jpNewPassw1, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                    .addComponent(jpNewPassw2)
                    .addComponent(jlAlertPassw2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlAlertPassw, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpNewPassw1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlAlertPassw)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpNewPassw2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlAlertPassw2)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        jLayeredPane2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jbUpdate.setText("Alterar");
        jbUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbUpdateActionPerformed(evt);
            }
        });
        jbUpdate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbUpdateKeyPressed(evt);
            }
        });

        jButton2.setText("Deletar Senha Existente");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jbCheckPasswd.setText("Ver senha atual");
        jbCheckPasswd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCheckPasswdActionPerformed(evt);
            }
        });

        jLayeredPane2.setLayer(jbUpdate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jbCheckPasswd, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addComponent(jbUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jbCheckPasswd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbUpdate)
                    .addComponent(jButton2)
                    .addComponent(jbCheckPasswd))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1)
                .addContainerGap())
            .addComponent(jLayeredPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLayeredPane2)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jbUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbUpdateActionPerformed
        updatePassw();
    }//GEN-LAST:event_jbUpdateActionPerformed

    private void jbCheckPasswdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCheckPasswdActionPerformed
        try {
            viewCurrentPassword();
        } catch (SQLException ex) {
            JOptionPane.showConfirmDialog(rootPane, "Erro ao mostrar informações");
        }
    }//GEN-LAST:event_jbCheckPasswdActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            deletePassw();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao deletar senha");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jpNewPassw1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jpNewPassw1FocusLost
       FLAG_CONTROLL_FOCUS = 1;
        authenticate();
    }//GEN-LAST:event_jpNewPassw1FocusLost

    private void jpNewPassw2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jpNewPassw2FocusLost
    FLAG_CONTROLL_FOCUS = 2;
        authenticate();
    }//GEN-LAST:event_jpNewPassw2FocusLost

    private void jpNewPassw1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jpNewPassw1KeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            jpNewPassw2.grabFocus();
        }
    }//GEN-LAST:event_jpNewPassw1KeyPressed

    private void jpNewPassw2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jpNewPassw2KeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            jbUpdate.grabFocus();
        }
    }//GEN-LAST:event_jpNewPassw2KeyPressed

    private void jbUpdateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbUpdateKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
           updatePassw();
        }
    }//GEN-LAST:event_jbUpdateKeyPressed

    Authentication auth = new Authentication();
    
    public void updatePassw(){
        if(!(authArray.size() < 0)){
           char[] pswd = jpNewPassw1.getPassword();
           char[] psw2 = jpNewPassw2.getPassword();
           String password=new String(pswd);
          String password2=new String(psw2);
       if(password.isEmpty()||password2.isEmpty())return;
        if(password.equals(password2)){                        
            
            try {
                
                authArray = authService.searchPassw();
                for(int i = 0; i<authArray.size(); i++){                    
                long id = authArray.get(i).getId_auth();
                auth.setId_auth(id);
                auth.setPassword(password2);
                authService.updatePassw(auth);
                
                dispose();
                }
                
                JOptionPane.showMessageDialog(rootPane, "Senha atualizada com sucesso");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Erro ao Atualizar: "+e.getMessage());
            }   
        }else{
            JOptionPane.showMessageDialog(rootPane, "Senhas não coicidem");
        }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Não há senhas cadastrada, defina uma nova senha! ");
        }
    }
    
    public void deletePassw() throws SQLException{
        if(!(authArray.size() < 0)){
        authArray = authService.searchPassw();
        for(int i = 0; i<authArray.size(); i++){  
            authService.deletePassw(authArray.get(i).getId_auth());                
        }
        JOptionPane.showMessageDialog(rootPane, "Senha deletada com sucesso");
        dispose();
        removedPasswListener.isExistPassw(true);
        }else{
            JOptionPane.showMessageDialog(rootPane, "Não há senha cadastrada");
        }
    }
    
    public void viewCurrentPassword() throws SQLException{
        if(!(authArray.size() < 0)){
        authArray = authService.searchPassw();
        
         for(int i = 0; i<authArray.size(); i++){                    
             
             JOptionPane.showMessageDialog(rootPane, "Senha: "+authArray.get(i).getPassword()+"\n"+
                "Frase de Alteração: "+authArray.get(i).getRecoveredkey());                                                
                }
        
        }else{
            JOptionPane.showMessageDialog(rootPane, "Não há senha cadastrada");
        }
    }

    private void authenticate(){
        this.isFocusDialog.isFocus(FLAG_CONTROLL_FOCUS, jbUpdate, jpNewPassw1, jlAlertPassw, jpNewPassw2, jlAlertPassw2,null,null);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JButton jbCheckPasswd;
    private javax.swing.JButton jbUpdate;
    private javax.swing.JLabel jlAlertPassw;
    private javax.swing.JLabel jlAlertPassw2;
    private javax.swing.JPasswordField jpNewPassw1;
    private javax.swing.JPasswordField jpNewPassw2;
    // End of variables declaration//GEN-END:variables
}
